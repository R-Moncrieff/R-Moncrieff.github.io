{"version":3,"sources":["Google_logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ReactGA","initialize","pageview","window","location","pathname","search","AppSize","width","height","useStyles","makeStyles","App","Object","objectSpread","margin","textAlign","display","flexDirection","justifyContent","wrapper","logo","marginTop","marginLeft","marginRight","greeting","fontFamily","fontSize","color","qrcode","padding","inputDiv","input","inputSelect","outputDiv","marginBottom","outputLine","lineHeight","text","paddingTop","paddingBottom","redDot","transform","greenDot","blueDot","noBr","whiteSpace","circle","Circle","_ref","rest","objectWithoutProperties","react_default","a","createElement","assign","cx","cy","r","fill","_useState","useState","_useState2","slicedToArray","hide","setHide","classes","_useState3","_useState4","linkedin","setLinkedin","_useState5","_useState6","name","setName","_useState7","_useState8","title","setTitle","_useState9","_useState10","region","setRegion","handleChange","setter","event","target","value","ref","useRef","className","lib_default","size","src","alt","TextField","label","placeholder","onChange","FormControl","Select","displayEmpty","selectEmpty","MenuItem","Button","variant","onClick","html2canvas","current","then","canvas","dataUrl","toDataURL","saveAs","console","log","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed3dc1bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Google_logo.e99543bb.svg\";","import React, { useState, useRef } from 'react';\n\nimport QRCode from 'qrcode.react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport html2canvas from 'html2canvas';\nimport { saveAs } from 'file-saver';\n\nimport './App.css';\nimport logo from './Google_logo.svg';\n\nimport ReactGA from 'react-ga';\nReactGA.initialize('UA-144838754-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nconst AppSize = {\n  width: 400,\n  height: 600,\n}\n\nconst useStyles = makeStyles({\n  App: {\n    margin: \"auto\",\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    ...AppSize,\n  },\n\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    height: \"100%\",\n  },\n\n  logo: {\n    marginTop: \"25%\",\n    width: 292,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n\n  greeting: {\n    fontFamily: \"'Roboto', sans-serif\",\n    fontSize: \"2em\",\n    color: \"#4285F4\",\n  },\n\n  qrcode: {\n    margin: \"20% auto -20% auto\",\n    padding: 8,\n  },\n  \n  inputDiv: {\n    margin: \"auto\",\n    width: \"100%\",\n  },\n\n  input: {\n    margin: \"0.5em\",\n    width: \"80%\",\n  },\n\n  inputSelect: {\n    margin: \"0.5em\",\n    textAlign: \"left\",\n    width: \"80%\",\n  },\n\n  outputDiv: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"5%\",\n    marginBottom: \"15%\",\n    display: \"inline-block\"\n  },\n\n  outputLine: {\n    lineHeight: 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"0.5rem\",\n    marginBottom: \"0.5rem\",\n  },\n\n  text: {\n    marginTop: \"auto\",\n    marginBottom: \"auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    fontFamily: \"'Roboto', sans-serif\",\n  },\n\n  redDot: {\n    marginTop: \"auto\",\n    marginBottom: \"auto\",\n    transform: \"scale(0.4)\",\n    color: \"red\",\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n  },\n  \n  greenDot: {\n    marginTop: \"auto\",\n    marginBottom: \"auto\",\n    transform: \"scale(0.4)\",\n    color: \"green\",\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n  },\n  blueDot: {\n    marginTop: \"auto\",\n    marginBottom: \"auto\",\n    transform: \"scale(0.4)\",\n    color: \"blue\",\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n  },\n  noBr: {\n    whiteSpace: \"nowrap\",\n  },\n  circle: {\n    marginTop: \"auto\",\n    marginBottom: \"auto\",\n    marginRight: \"0.5rem\"\n  },\n\n});\n\nfunction App() {\n  const [hide, setHide] = useState(false);\n  const classes = useStyles({ hide });\n\n  const [linkedin, setLinkedin] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [region, setRegion] = useState(\"Google\");\n\n  const handleChange = (setter) => { return (event) => {\n      setter(event.target.value);\n    }\n  }\n\n  const ref = useRef();\n\n  const onDownload = () => {\n    html2canvas(ref.current).then(canvas => {\n      let dataUrl = canvas.toDataURL(\"image/png\");\n      saveAs(dataUrl, \"G-Conference\");\n\n      // var link = document.createElement('a');\n      // link.href = dataUrl;\n      // link.download = 'G-Conference';\n      // document.body.appendChild(link);\n      // link.click();\n      // document.body.removeChild(link);\n\n      console.log(\"Done\");\n    });\n  }\n\n  return (\n    <div className={classes.App}>\n      <div ref={ref} className={classes.wrapper}>\n        {hide && <QRCode className={classes.qrcode} value={linkedin} size={AppSize.width * 0.6} />}\n        \n        <img src={logo} alt=\"Google Logo\" className={classes.logo}/>\n        {!hide && <h1 className={classes.greeting}>G-Conference <span className={classes.noBr}>QR Generator</span></h1>}\n        {!hide && <div className={classes.inputDiv}>\n          <TextField\n            className={classes.input}\n            label=\"Linkedin URL\"\n            placeholder=\"https://www.linkedin.com/in/....\"\n            value={linkedin}\n            onChange={handleChange(setLinkedin)}\n          />\n          <TextField\n            className={classes.input}\n            label=\"Name\"\n            placeholder=\"\"\n            value={name}\n            onChange={handleChange(setName)}\n          />\n          <TextField\n            className={classes.input}\n            label=\"Title\"\n            placeholder=\"\"\n            value={title}\n            onChange={handleChange(setTitle)}\n          />\n          <FormControl className={classes.inputSelect}>\n            <Select\n              value={region}\n              onChange={handleChange(setRegion)}\n              displayEmpty\n              name=\"region\"\n              className={classes.selectEmpty}\n            >\n              <MenuItem value=\"Google\">\n                <em>Google</em>\n              </MenuItem>\n              <MenuItem value=\"Google EMEA\">Google EMEA</MenuItem>\n              <MenuItem value=\"Google APAC\">Google APAC</MenuItem>\n              <MenuItem value=\"Google US\">Google US</MenuItem>\n              <MenuItem value=\"Google LATAM\">Google LATAM</MenuItem>\n            </Select>\n\n          </FormControl>\n        </div>}\n        {hide && <div className={classes.outputDiv}>\n          {/* <div className={classes.outputLine}><p className={classes.redDot}>·</p> <p>{name}</p></div>\n          <div className={classes.outputLine}><p className={classes.greenDot}>·</p> <p>{title}</p></div> */}\n\n          <div className={classes.outputLine}><Circle className={classes.circle} color=\"red\" /><p className={classes.text}>{name}&#8203;</p></div>\n          <div className={classes.outputLine}><Circle className={classes.circle} color=\"green\" /><p className={classes.text}>{title}&#8203;</p></div>\n          <div className={classes.outputLine}><Circle className={classes.circle} color=\"blue\" /><p className={classes.text}>{region}&#8203;</p></div>\n\n        </div>}\n      </div>\n      <Button variant=\"contained\" onClick={()=>{ setHide(hide => !hide) }}>\n        {hide ? \"Edit\" : \"Preview\"}\n      </Button>\n      {hide && <Button variant=\"contained\" onClick={onDownload}>\n        Download\n      </Button>}\n    </div>\n  );\n}\n\nfunction Circle({color, ...rest}) {\n  return (\n    <svg width=\"8\" height=\"8\" {...rest}>\n      <circle cx=\"4\" cy=\"4\" r=\"4\" fill={color} />\n    </svg>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}